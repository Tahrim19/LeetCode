class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length;
        // make sure the length is greater than 3
        if(n < 3){
            return false;
        }
        
        int i = 0;
        
        
        // increasing part, where decressing found, break.
        while(i+1<n && arr[i] < arr[i+1]){
            i++;
        }
  
        
        // no peak found or not strictly decreasing or last and current element same
        if(i==0 || i == n-1 || arr[i] == arr[i + 1]){
            return false;
        }
        
        // check if array is decreasing
        while(i+1<n && arr[i] > arr[i+1]){
            i++;
        }
        
        // If we've reached the end of the array, it's a valid mountain array
        return i == n-1;
        
    }
}
